<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>sapphirecat</title><link href="https://sapphirecat.github.io/" rel="alternate"></link><link href="https://sapphirecat.github.io/feeds/all.atom.xml" rel="self"></link><id>https://sapphirecat.github.io/</id><updated>2022-08-14T00:00:00-04:00</updated><subtitle>the user pages</subtitle><entry><title>Quilt Draw update released!</title><link href="https://sapphirecat.github.io/2022/226-quilt-draw/" rel="alternate"></link><published>2022-08-14T00:00:00-04:00</published><updated>2022-08-14T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2022-08-14:/2022/226-quilt-draw/</id><content type="html">&lt;p&gt;A new &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;quilt-draw&lt;/span&gt;&lt;/tt&gt; release has been made!  This may also be the world’s
first announcement of its existence, outside of appearing in a GitHub
repository.&lt;/p&gt;
&lt;p&gt;To use it, go to its &lt;a class="reference external" href="https://sapphirecat.github.io/quilt-draw/"&gt;repository page&lt;/a&gt;.  &lt;strong&gt;Known issue:&lt;/strong&gt; Dark Reader
completely destroys the UI elements.  Please turn off Dark Reader for the
site.&lt;/p&gt;
&lt;div class="section" id="what-is-quilt-draw"&gt;
&lt;h2&gt;What is quilt-draw?&lt;/h2&gt;
&lt;p&gt;Quilt Draw is a quarter-square triangle designing tool.  It lets you pick a
set of colors, then modify a single quilt block using them. A preview of a
full quilt using the block is generated in real time.  There are also options
for adding borders and sashing to the preview.&lt;/p&gt;
&lt;p&gt;Finally, there are options to download both the block itself, and the quilt
preview.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-new"&gt;
&lt;h2&gt;What is new?&lt;/h2&gt;
&lt;p&gt;When the width of the window exceeded 1600 pixels, there were coordinate
errors.  They are now fixed.  It’s a hack, but it works.&lt;/p&gt;
&lt;p&gt;I have also updated the components (the color picker) to the latest version.
The main code still targets ES6/2015, so there should be few issues, even on
older computers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="technical-support"&gt;
&lt;h2&gt;Technical Support&lt;/h2&gt;
&lt;p&gt;There is none.  This project is strictly for amusement.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Projects"></category></entry><entry><title>Theme Updated (2022)</title><link href="https://sapphirecat.github.io/2022/206-theme-update-light-mode/" rel="alternate"></link><published>2022-07-25T00:00:00-04:00</published><updated>2022-07-25T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2022-07-25:/2022/206-theme-update-light-mode/</id><content type="html">&lt;p&gt;I added a light theme for user-agents that support preferring light color
schemes.  Dark is still the default, because it’s the correct way to have a
color scheme, despite people shouting at me on the internet from 2002 until
the advent of dark mode that “dark themes go against biological fact.”  How
strange that the biological essentialism vanished overnight, almost as if it
were never true.&lt;/p&gt;
&lt;p&gt;While I was updating the stylesheet, I fixed some 2009-isms in it, like
IE-specific rules and prefixed &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;border-radius&lt;/span&gt;&lt;/tt&gt; rules.  This is the future.&lt;/p&gt;
</content><category term="Meta"></category></entry><entry><title>dynacache version 1.1.2 released!</title><link href="https://sapphirecat.github.io/2022/110-dynacache-1-1-2-released/" rel="alternate"></link><published>2022-04-20T00:00:00-04:00</published><updated>2022-04-20T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2022-04-20:/2022/110-dynacache-1-1-2-released/</id><content type="html">&lt;p&gt;The &lt;tt class="docutils literal"&gt;dynacache&lt;/tt&gt; 1.1.2 &lt;a class="reference external" href="https://github.com/sapphirecat/dynacache/releases/tag/v1.1.2"&gt;release&lt;/a&gt; is made available to the public in binary form
for AMD64 (v2 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/X86-64#Microarchitecture_levels"&gt;architecture level&lt;/a&gt;) Linux.&lt;/p&gt;
&lt;div class="section" id="what-is-dynacache"&gt;
&lt;h2&gt;What is dynacache?&lt;/h2&gt;
&lt;p&gt;dynacache is a memcached server that stores data in Amazon DynamoDb.  It
recognizes the session-locking protocol of PHP's memcached extension,
converting them into locks in DynamoDb that are compatible with the AWS
SDK for PHP.  Data is &lt;em&gt;nearly&lt;/em&gt; compatible: the data is stored as a
binary type, because the SDK for Go requires a string type to be valid
UTF-8, and PHP makes no such promise.&lt;/p&gt;
&lt;p&gt;For best results with PHP, set the following options in the relevant
&lt;tt class="docutils literal"&gt;php.ini&lt;/tt&gt; file:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
; dynacache doesn't support the binary protocol
memcached.sess_binary_protocol = Off
memcached.sess_prefix = memc.sess.key.
; use dynacache to store sessions
session.save_handler = memcached
session.save_path = localhost:11211
&lt;/pre&gt;
&lt;p&gt;For available configuration, &lt;tt class="docutils literal"&gt;dynacache&lt;/tt&gt; supports the standard AWS SDK
locations for credentials, and some optional settings shown when running
&lt;tt class="docutils literal"&gt;dynacache &lt;span class="pre"&gt;-help&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="release-details"&gt;
&lt;h2&gt;Release Details&lt;/h2&gt;
&lt;p&gt;Since the 1.0.0 release, which is the last public version, the following
changes have been made:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The build is done with Go 1.18.1 with &lt;tt class="docutils literal"&gt;GOAMD64=v2&lt;/tt&gt; set.&lt;/li&gt;
&lt;li&gt;Response to &lt;tt class="docutils literal"&gt;version&lt;/tt&gt; is closer to the release version number than
before.  It's still not &lt;em&gt;strictly&lt;/em&gt; correct, unfortunately.&lt;/li&gt;
&lt;li&gt;CLI flag &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-verbose&lt;/span&gt;&lt;/tt&gt; and env var &lt;tt class="docutils literal"&gt;DYNACACHE_VERBOSE&lt;/tt&gt; (uint8) for
controlling the logging level.&lt;/li&gt;
&lt;li&gt;Missing &lt;tt class="docutils literal"&gt;append&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;prepend&lt;/tt&gt; commands are accepted.&lt;/li&gt;
&lt;li&gt;Idle clients will be disconnected during normal operation.&lt;/li&gt;
&lt;li&gt;Graceful server shutdown happens within a bounded time limit.&lt;/li&gt;
&lt;li&gt;Repeated signals will cause an immediate shutdown.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;This project is not Open Source due to the reappointment of Richard
Stallman to the FSF Board.&lt;/em&gt;  sapphirecat stands opposed to child
pornography, sex trafficking, sexism, and redefining rape.  Leadership
creates the culture of the movement, and that culture gets associated
implicitly with any participant.  It is imperative, then, for leaders to
own their mistakes.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Projects"></category></entry><entry><title>devproxy2 version 2.0.0 released!</title><link href="https://sapphirecat.github.io/2020/326-devproxy2-version-2-0-0-released/" rel="alternate"></link><published>2020-11-21T00:00:00-05:00</published><updated>2020-11-21T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2020-11-21:/2020/326-devproxy2-version-2-0-0-released/</id><content type="html">&lt;p&gt;The core binary has been stable for months, so I finally tagged
&lt;tt class="docutils literal"&gt;v2.0.0&lt;/tt&gt; and made a GitHub Release with it.&lt;/p&gt;
&lt;p&gt;Recent changes have added a Dockerfile and related support for isolating
the version of Go used to build &lt;tt class="docutils literal"&gt;devproxy2&lt;/tt&gt; from the host’s version of
Go, so that I can continue to support “1.13+” as long as my dependencies
do.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>zora colorscheme for Vim/GVim/Neovim</title><link href="https://sapphirecat.github.io/2019/020-zora-colorscheme-vim-gvim-neovim/" rel="alternate"></link><published>2019-01-20T00:00:00-05:00</published><updated>2019-01-20T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2019-01-20:/2019/020-zora-colorscheme-vim-gvim-neovim/</id><content type="html">&lt;p&gt;I created a new colorscheme! It’s based on Zora’s Domain and the
surrounding areas in &lt;em&gt;The Legend of Zelda: Breath of the Wild.&lt;/em&gt; It’s a
light theme, making heavy use of blue, green, purple, and salmon.&lt;/p&gt;
&lt;p&gt;It’s now available from
&lt;a class="reference external" href="https://github.com/sapphirecat/zora-theme-vim/"&gt;zora-theme-vim&lt;/a&gt; on
my GitHub.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/zora/php.png"&gt;&lt;img alt="An example using PHP code" src="https://sapphirecat.github.io/images/zora/php.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/zora/multi.png"&gt;&lt;img alt="An example of multiple windows and cursor line option" src="https://sapphirecat.github.io/images/zora/multi.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is less of an experiment and more of a complete theme than ashgren
was, so it’s correspondingly more complete, &lt;strong&gt;and&lt;/strong&gt; it supports
256-color terminals.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>Three Vim Plugins</title><link href="https://sapphirecat.github.io/2019/017-a-trio-of-vim-plugins/" rel="alternate"></link><published>2019-01-17T00:00:00-05:00</published><updated>2019-01-17T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2019-01-17:/2019/017-a-trio-of-vim-plugins/</id><content type="html">&lt;p&gt;I dusted off and ENHANCED™ three of my old vim plugins:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/sapphirecat/blursave-vim"&gt;BlurSave&lt;/a&gt; – to save
files when the vim window loses focus, probably only useful in gvim&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/sapphirecat/php-psr2-vim"&gt;PHP PSR-2 auto
settings&lt;/a&gt; – to set
PSR-2 recommended indent settings and margin highlighting for PHP
files&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/sapphirecat/indent-cmds-vim"&gt;Indent commands&lt;/a&gt;
– to offer more semantic shortcuts for controlling tabs/spaces/both
and their widths&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They’re all designed to be usable by
&lt;a class="reference external" href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;, so I think that
means they work in all Vim package managers (Pathogen, Vundle, etc.)&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>New repo: ashgren GVim colorscheme</title><link href="https://sapphirecat.github.io/2019/013-ashgren-gvim-colorscheme/" rel="alternate"></link><published>2019-01-13T00:00:00-05:00</published><updated>2019-01-13T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2019-01-13:/2019/013-ashgren-gvim-colorscheme/</id><content type="html">&lt;p&gt;I dusted off an old PuTTY theme, from when I was using Windows Vista,
and ported it to GVim (and only GVim.)&lt;/p&gt;
&lt;p&gt;The repository has been published as
&lt;a class="reference external" href="https://github.com/sapphirecat/ashgren-gvim/"&gt;ashgren-gvim&lt;/a&gt; on my
GitHub.&lt;/p&gt;
&lt;p&gt;ashgren is a low-contrast theme with a mid-tone background. A lot of
light themes use a blazing white background, which makes it difficult to
distinguish among the darker colors they use.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/php.png"&gt;&lt;img alt="An example using PHP code" src="https://sapphirecat.github.io/images/ashgren/php.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/js.png"&gt;&lt;img alt="An example using JavaScript code" src="https://sapphirecat.github.io/images/ashgren/js.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/go.png"&gt;&lt;img alt="An example using Go code" src="https://sapphirecat.github.io/images/ashgren/go.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/py.png"&gt;&lt;img alt="An example using Python code" src="https://sapphirecat.github.io/images/ashgren/py.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/md.png"&gt;&lt;img alt="An example using Markdown" src="https://sapphirecat.github.io/images/ashgren/md.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/multi.png"&gt;&lt;img alt="An example of multiple windows and cursor line option" src="https://sapphirecat.github.io/images/ashgren/multi.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As a PuTTY theme, ashgren used a set of darker (regular) and lighter
(bold) foreground colors, but this port ends up mostly using the darker
side of the palette.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>Theme Updated</title><link href="https://sapphirecat.github.io/2016/036-theme-update/" rel="alternate"></link><published>2016-02-05T00:00:00-05:00</published><updated>2016-02-05T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2016-02-05:/2016/036-theme-update/</id><content type="html">&lt;p&gt;I accidentally discovered that the theme I was using performs an
&lt;em&gt;extremely inaccurately named&lt;/em&gt; “reset” that wipes out the only style
&lt;tt class="docutils literal"&gt;:focus&lt;/tt&gt; really has. So I put something back on all the links.&lt;/p&gt;
&lt;p&gt;The colors got switched up a bit, too. There’s less purple/yellow and
more red/blue. I even reworked the 800px design to resize fluidly down
to 320px, for an improved mobile experience.&lt;/p&gt;
&lt;p&gt;The desktop layout has
&lt;a class="reference external" href="https://sapphirecat.github.io/images/theme/2016-before.png"&gt;Before&lt;/a&gt; and
&lt;a class="reference external" href="https://sapphirecat.github.io/images/theme/2016-after.png"&gt;After&lt;/a&gt; screenshots.&lt;/p&gt;
</content><category term="Meta"></category></entry><entry><title>cloud-maker 0.8.4: minor bugfixes</title><link href="https://sapphirecat.github.io/2016/035-cloud-maker-0-8-4-release/" rel="alternate"></link><published>2016-02-04T00:00:00-05:00</published><updated>2016-02-04T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2016-02-04:/2016/035-cloud-maker-0-8-4-release/</id><content type="html">&lt;p&gt;I discovered the module which I had intended to use as a version check
via &lt;tt class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; cloud_maker&lt;/tt&gt; didn’t actually work. There was no way to
execute it, to begin with. It also turned out that &lt;tt class="docutils literal"&gt;sys.version_info&lt;/tt&gt;
wasn’t something that could be used with tuple unpacking in Python 2.&lt;/p&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--help&lt;/span&gt;&lt;/tt&gt; option used to print the usage information, and then a
traceback for a &lt;tt class="docutils literal"&gt;SystemExit&lt;/tt&gt; exception. I narrowed this down to an
overzealous &lt;tt class="docutils literal"&gt;try/except&lt;/tt&gt; block, so now it recognizes &lt;tt class="docutils literal"&gt;SystemExit&lt;/tt&gt;
and &lt;tt class="docutils literal"&gt;KeyboardInterrupt&lt;/tt&gt; and skips the traceback for those.&lt;/p&gt;
&lt;p&gt;Finally, the documentation was enhanced slightly. I was rather
surprised, when finding out how the version check was supposed to work,
that there wasn’t the &lt;em&gt;slightest bit&lt;/em&gt; in the README about how this was
intended to be invoked. The slightest bit is now there.&lt;/p&gt;
&lt;p&gt;This release is available as &lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/releases"&gt;source on
github&lt;/a&gt;, and as
a wheel &lt;a class="reference external" href="https://pypi.python.org/pypi/cloud-maker/0.8.4"&gt;on PyPI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Any and all bugs should be reported to the &lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/issues"&gt;issue
tracker&lt;/a&gt; on
github.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: this release was actually made January 24th, but I forgot to
write about it here (and tag the git repository) until February 4th.&lt;/em&gt;&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>cloud-maker 0.8.3: new config variable, accurate requirements</title><link href="https://sapphirecat.github.io/2015/356-cloud-maker-0-8-3-release/" rel="alternate"></link><published>2015-12-22T00:00:00-05:00</published><updated>2015-12-22T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-12-22:/2015/356-cloud-maker-0-8-3-release/</id><content type="html">&lt;p&gt;The 0.8.3 release adds an &lt;tt class="docutils literal"&gt;INI_DIR&lt;/tt&gt; variable that will be substituted
into values in the configuration file, allowing for paths to be
specified relative to the config file. It turned out that this was a
feature I wanted, to keep the bundled data somewhat more local than
requiring a fixed path under &lt;tt class="docutils literal"&gt;HOME&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;While testing this change, I discovered that the Python 3 line prior to
3.3.4 had a bug in the &lt;tt class="docutils literal"&gt;tarfile&lt;/tt&gt; module. When using the module exactly
as I am (with an externally-provided file object and gzip compression),
the tar data doesn’t get written into the gzip stream on disk.&lt;/p&gt;
&lt;p&gt;That was reported as &lt;a class="reference external" href="http://bugs.python.org/issue20238"&gt;issue 20238&lt;/a&gt;
and fixed by the final releases of 3.3.4 and 3.4.0, while 2.7 has never
been affected.&lt;/p&gt;
&lt;p&gt;Due to the widespread availability of 2.7 on systems that packaged
affected versions of Python, I decided the pragmatic path would be to
recommend Python 2 on those systems and raise the Python 3 version
requirement to 3.3.4. I haven’t isolated the fix by diffing Python
releases, nor do I know what I would need to patch over in order to work
around it.&lt;/p&gt;
&lt;p&gt;This release is available as &lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/releases"&gt;source on
github&lt;/a&gt;, and as
a wheel &lt;a class="reference external" href="https://pypi.python.org/pypi/cloud-maker/0.8.3"&gt;on PyPI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Any and all bugs should be reported to the &lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/issues"&gt;issue
tracker&lt;/a&gt; on
github.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>cloud-maker 0.8.2: PyPI publication</title><link href="https://sapphirecat.github.io/2015/317-cloud-maker-0-8-2-release/" rel="alternate"></link><published>2015-11-13T00:00:00-05:00</published><updated>2015-11-13T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-11-13:/2015/317-cloud-maker-0-8-2-release/</id><content type="html">&lt;p&gt;The 0.8.2 release adds a &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; and associated machinery, meaning
that cloud-maker is now &lt;a class="reference external" href="https://pypi.python.org/pypi/cloud-maker"&gt;on
PyPI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Any and all bugs should be reported to the issue tracker on
&lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/issues"&gt;github&lt;/a&gt;.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>cloud-maker 0.8.1: Python 2.7 support</title><link href="https://sapphirecat.github.io/2015/312-cloud-maker-0-8-1-release/" rel="alternate"></link><published>2015-11-08T00:00:00-05:00</published><updated>2015-11-08T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-11-08:/2015/312-cloud-maker-0-8-1-release/</id><content type="html">&lt;p&gt;The 0.8.1 release adds official support for Python 2.7 to cloud-maker,
enabling it to run on the system python installed with OS X. Reports on
the Internet suggest that this covers at least as far back as Lion,
forward through El Capitan. (I can’t find an extensive history, but Lion
released a year after 2.7.0, which in turn came after Snow Leopard.)&lt;/p&gt;
&lt;p&gt;This change should also make it more readily available to Linux users,
as python 2 is typically installed as the default &lt;tt class="docutils literal"&gt;/usr/bin/python&lt;/tt&gt;
executable.&lt;/p&gt;
&lt;p&gt;If there are any issues with this release, please send them to
&lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/issues"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In other news, ‘v0.8.0’ and ‘v0.8.1’ tags have been added to the
repository.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>cloud-maker 0.8.0</title><link href="https://sapphirecat.github.io/2015/295-cloud-maker-0-8-0-release/" rel="alternate"></link><published>2015-10-22T00:00:00-04:00</published><updated>2015-10-22T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-10-22:/2015/295-cloud-maker-0-8-0-release/</id><content type="html">&lt;p&gt;I didn’t actually test the OVA export I got from &lt;tt class="docutils literal"&gt;fedora2ova&lt;/tt&gt;, but
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;cloud-maker&lt;/span&gt;&lt;/tt&gt; has been pushed to my &lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker"&gt;cloud-maker
repo&lt;/a&gt;. Happy Wily
Werewolf Release Day!&lt;/p&gt;
&lt;p&gt;The repo is currently designed to run in-place with either of these
forms:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -m make_provisioner --help
python . provision --help
&lt;/pre&gt;
&lt;p&gt;I’d like to add a &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; so it can be published to PyPI and
abandoned, but that’s not ready yet.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>fedora-pack to be superseded by cloud-maker</title><link href="https://sapphirecat.github.io/2015/265-cloud-maker-replacing-fedora-pack/" rel="alternate"></link><published>2015-09-22T00:00:00-04:00</published><updated>2015-09-22T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-09-22:/2015/265-cloud-maker-replacing-fedora-pack/</id><content type="html">&lt;p&gt;When we &lt;a class="reference external" href="https://sapphirecat.github.io/2015/013-fedora-pack-config/"&gt;last left
off&lt;/a&gt;, I had sketched
out a config file for fedora-pack, then neglected it when I finally
accepted that &lt;a class="reference external" href="https://www.decodednode.com/2015/02/perl-is-dying.html"&gt;Perl is
dying&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Seven months later, fedora-pack is undergoing a rewrite to Python. It’s
equally widespread (or easy to install) and includes a ton of batteries.
I’ve always liked that.&lt;/p&gt;
&lt;p&gt;But that’s only half the change. I’ve been trying to simplify and
streamline the code, to make it &lt;em&gt;more straightforward&lt;/em&gt; even at the
expense of some flexibility and testability—there are, after all, no
tests, no extensions, and no users. As far as I know.&lt;/p&gt;
&lt;p&gt;That’s resulted in a rather different codebase, because of two
realizations:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;At work, I don’t use the multi-version capability. What if
&lt;tt class="docutils literal"&gt;make_provisioner&lt;/tt&gt; just installs the platform’s &lt;em&gt;default&lt;/em&gt; version?
It would have to know a lot less about distros and versions.&lt;/li&gt;
&lt;li&gt;At work, our bundled scripts install our own necessary packages (such
as git) in addition to the core languages. What if
&lt;tt class="docutils literal"&gt;make_provisioner&lt;/tt&gt; doesn’t bother offering &lt;em&gt;package
preinstallation?&lt;/em&gt; On the one side of the process is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;cloud-init&lt;/span&gt;&lt;/tt&gt;,
if preinstallation is important. On the other, the runner script can
install its own choice of language packages. Now &lt;tt class="docutils literal"&gt;make_provisioner&lt;/tt&gt;
doesn’t even have to care about distros (or features or packages)
&lt;strong&gt;at all&lt;/strong&gt;, as long as it can have a distro-agnostic SFX stub.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Things seem to be going well so far; expect a code dump on github by
November. I want to use cloud-maker for work’s AMI builder, instead of a
hacked fedora-pack fork, and the Ubuntu 15.10 release will be a good
time to change that.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>fedora-pack Configuration File Update</title><link href="https://sapphirecat.github.io/2015/013-fedora-pack-config/" rel="alternate"></link><published>2015-01-13T00:00:00-05:00</published><updated>2015-01-13T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-01-13:/2015/013-fedora-pack-config/</id><content type="html">&lt;p&gt;I mentioned &lt;a class="reference external" href="https://sapphirecat.github.io/2014/355-more-fedora-pack-options/"&gt;last
post&lt;/a&gt; that I
was thinking of going with “a config file of some sort.” Plans have
formed to use INI format, and the parser is written. (Between the
desires to be pure-perl all the way down and to keep embed size down, I
didn’t find any pre-written parsers that suited me on CPAN.)&lt;/p&gt;
&lt;p&gt;So, it’s probably going to end up something like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
; we basically just use this for supervisord, no venv needed
[python2]
min_version = 2.7
with_virtualenv = 0

; legacy app can’t handle `carton exec`
[perl]
with_carton = 0

[php]
min_version=5.4

[main]
install = &amp;quot;php perl python2&amp;quot; ; known to fedora-pack
add_packages = &amp;quot;php5-fpm libmoose-perl&amp;quot; ; known to apt/yum
&lt;/pre&gt;
&lt;p&gt;As a bonus, the sections organize the options so that languages can
define their own options &lt;em&gt;fully independently,&lt;/em&gt; without having to avoid
naming conflicts in the CLI options.&lt;/p&gt;
&lt;p&gt;fedora-pack will continue to install all the per-language options by
default, since actually using them is best practice, as I understand
things.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>More fedora-pack Options</title><link href="https://sapphirecat.github.io/2014/355-more-fedora-pack-options/" rel="alternate"></link><published>2014-12-21T00:00:00-05:00</published><updated>2014-12-21T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2014-12-21:/2014/355-more-fedora-pack-options/</id><content type="html">&lt;p&gt;I’ve noticed that &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;python-pip&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; packages on Ubuntu
Utopic have similar dependencies—but the latter is on &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;*-whl&lt;/span&gt;&lt;/tt&gt; packages
and the former is not. Since I use Python but &lt;em&gt;not&lt;/em&gt; virtualenv in my own
server build, it ‘would be nice’ to skip the automatic installation of
it by fedora-pack.&lt;/p&gt;
&lt;p&gt;Of course, in order to support such a thing, fedora-pack clearly needs
more options for finer control. Yet, it seems like the global option
parser isn’t the perfect place for language-related options, so the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;App::FedoraPack::System&lt;/span&gt;&lt;/tt&gt; class tree may spawn some additional
argument-related functions.&lt;/p&gt;
&lt;p&gt;I may finally go with a config file of some sort. The command line &lt;em&gt;is&lt;/em&gt;
getting unwieldy already.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>User Pages… Finally</title><link href="https://sapphirecat.github.io/2014/353-user-pages-finally/" rel="alternate"></link><published>2014-12-19T00:00:00-05:00</published><updated>2014-12-19T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2014-12-19:/2014/353-user-pages-finally/</id><content type="html">&lt;p&gt;I didn’t really have a place to pre-announce changes to my repos, so I
made one.&lt;/p&gt;
&lt;p&gt;This spawned a small adventure through
&lt;a class="reference external" href="https://www.staticgen.com/"&gt;staticgen&lt;/a&gt; in order to find a static
site generator. I really wanted it to run on Win64, because I have to
fire up a VM to update
&lt;a class="reference external" href="https://www.sapphirepaw.org/propaganda"&gt;propaganda&lt;/a&gt; since it was
built for a POSIX world. For style points, I went for ones written in
languages I already have installed.&lt;/p&gt;
&lt;p&gt;So after trying &lt;a class="reference external" href="http://gohugo.io/"&gt;Hugo&lt;/a&gt;,
&lt;a class="reference external" href="https://sculpin.io/"&gt;Sculpin&lt;/a&gt;, &lt;a class="reference external" href="http://phrozn.info/"&gt;Phrozn&lt;/a&gt;, and
&lt;a class="reference external" href="http://getpelican.com/"&gt;Pelican&lt;/a&gt;, the last one happened to be a
winner.&lt;/p&gt;
&lt;p&gt;I’m kind of sad Hugo didn’t work out, since it seems fast and nicely
built, but I couldn’t get it to understand about generating pages with
&lt;em&gt;relative&lt;/em&gt; URLs so that I could preview them with the theme applying
properly.&lt;/p&gt;
&lt;p&gt;One of the PHP frameworks wasn’t PHAR-aware, and tried to use
&lt;tt class="docutils literal"&gt;DIRECTORY_SEPARATOR&lt;/tt&gt; to build the path of an XML file to load… but
that creates an invalid URL when &lt;tt class="docutils literal"&gt;DIRECTORY_SEPARATOR&lt;/tt&gt; isn’t ‘/’.&lt;/p&gt;
&lt;p&gt;Pelican has its warts, to be sure (there’s no real themes gallery, just
a &lt;a class="reference external" href="https://github.com/getpelican/pelican-themes"&gt;bunch of githubs&lt;/a&gt;
with screenshots of varying quality) but it’s working and I can work
with it. And I’m not locked into keeping all my pages on github because
Octopress is secretly managing the repository for me; I wrote my own
publish script. Although magic is &lt;em&gt;convenient,&lt;/em&gt; it turns out that I
always want to understand the next layer down. Even if it’s just a small
bit of knowledge I never use, it’s comforting to know I wouldn’t be
hopelessly adrift if GitHub Pages closed down.&lt;/p&gt;
&lt;p&gt;Anyway, look for future updates about my repositories here on
&lt;a class="reference external" href="https://sapphirecat.github.io/"&gt;sapphirecat.github.io&lt;/a&gt;. I want to
get away from the “randomly dump breaking changes on an unsuspecting
world” model of development.&lt;/p&gt;
</content><category term="Meta"></category></entry></feed>