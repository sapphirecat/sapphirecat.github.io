<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>sapphirecat - Projects</title><link href="https://sapphirecat.github.io/" rel="alternate"></link><link href="https://sapphirecat.github.io/feeds/projects.atom.xml" rel="self"></link><id>https://sapphirecat.github.io/</id><updated>2024-03-13T00:00:00-04:00</updated><subtitle>the user pages</subtitle><entry><title>Quilt Draw 2.0.0: Tabbed Interface</title><link href="https://sapphirecat.github.io/2024/073-quilt-draw-tabs/" rel="alternate"></link><published>2024-03-13T00:00:00-04:00</published><updated>2024-03-13T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2024-03-13:/2024/073-quilt-draw-tabs/</id><content type="html">&lt;p&gt;A new Quilt Draw release has been made!  To use it, go to its &lt;a class="reference external" href="https://sapphirecat.github.io/quilt-draw/"&gt;repository
page&lt;/a&gt;.  &lt;em&gt;Possible issue:&lt;/em&gt; Please turn off Dark Reader for the site when using a
browser that supports prefers-color-scheme, because the site already has a dark
theme for that environment.&lt;/p&gt;
&lt;p&gt;This is a &lt;strong&gt;major&lt;/strong&gt; release that restructures the entire UI into tabs.  The
“Block” tab retains the editor, block controls, and a mini-preview.  A larger
preview, and controls for the quilt as a whole, are on the “Quilt” tab.
Finally, there is a “Print” tab with a print-oriented layout.  It should show
the block at a reasonable size, along with the whole preview, on a single page.&lt;/p&gt;
&lt;p&gt;Printing is meant to work &lt;em&gt;reasonably well&lt;/em&gt; on either A4 or US Letter paper
sizes with “fit width” as the scaling option.  Please file an &lt;a class="reference external" href="https://github.com/sapphirecat/quilt-draw/issues/"&gt;issue&lt;/a&gt; if there
are any problems.&lt;/p&gt;
&lt;p&gt;The tools for the block editor have been revamped to be graphical.&lt;/p&gt;
&lt;p&gt;The “spin” and “flip” tools have been reworked, so that &lt;strong&gt;all operations are
available without a right-click&lt;/strong&gt; function available.  That is, instead of a
single “Flip” tool that chooses directions based entirely on the mouse button,
there are distinct “↔” (horizontal flip) and “↕” (vertical flip) tools.  Each
one &lt;em&gt;supports&lt;/em&gt; right-click to do the related operation, but it is no longer
&lt;em&gt;required.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Minor features include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The main/secondary color layout is vertical, to reduce confusion when using
left-handed mouse button layout (the primary color is now above, rather than
to the left of, the secondary color.)&lt;/li&gt;
&lt;li&gt;The mouse cursor changes shape over the block editor, based on the currently
selected tool, as an additional hint.&lt;/li&gt;
&lt;li&gt;New site/app icons have been created.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This release has been tagged in the repository as &lt;tt class="docutils literal"&gt;v2.0.0&lt;/tt&gt;; going forward,
each release will be given a version number, according to the &lt;a class="reference external" href="https://semver.org/"&gt;Semantic
Versioning&lt;/a&gt; standard.&lt;/p&gt;
&lt;p&gt;Support for Firefox 52 ESR (Windows XP/Vista) and Pale Moon has been retained.
I would like to give a special salute to &lt;a class="reference external" href="https://www.mozilla.org/"&gt;Mozilla&lt;/a&gt; for supporting operating
systems longer than &lt;em&gt;strictly&lt;/em&gt; necessary.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>Garden Vim Theme v1.0</title><link href="https://sapphirecat.github.io/2024/048-garden-vim-1-0/" rel="alternate"></link><published>2024-02-17T00:00:00-05:00</published><updated>2024-02-17T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2024-02-17:/2024/048-garden-vim-1-0/</id><content type="html">&lt;p&gt;I am pleased to announce the first release of &lt;a class="reference external" href="https://github.com/sapphirecat/garden-vim"&gt;garden-vim&lt;/a&gt;, a dark, earthy
theme primarily for GUI (gVim, neovim, and &lt;a class="reference external" href="https://github.com/termstandard/colors"&gt;truecolor terminals&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Screenshots, with &lt;a class="reference external" href="https://github.com/vim-airline/vim-airline"&gt;airline&lt;/a&gt;:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/garden/garden-php.png"&gt;&lt;img alt="Garden theme with PHP code" src="https://sapphirecat.github.io/images/garden/garden-php.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/garden/garden-multi.png"&gt;&lt;img alt="Garden theme with multiple windows" src="https://sapphirecat.github.io/images/garden/garden-multi.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The airline theme is designed to change only the leftmost background when
changing modes.  Changing the entire line seemed rather distracting.&lt;/p&gt;
&lt;p&gt;Due to the limitations of the 256-color XTerm palette, there exists a 256-color
theme, but it is not recommended.  One should use &lt;tt class="docutils literal"&gt;:set termguicolors&lt;/tt&gt;
to activate truecolor rendering in terminal windows for the best experience.
Alternatively, check &lt;tt class="docutils literal"&gt;if &lt;span class="pre"&gt;has('gui_running')&lt;/span&gt;&lt;/tt&gt; to choose a different theme for
the terminal in the &lt;tt class="docutils literal"&gt;else&lt;/tt&gt; branch of your vimrc file:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
if has('gui_running')
  colorscheme garden
else
  colorscheme desert
endif
&lt;/pre&gt;
&lt;p&gt;Once again, the repository is github.com/sapphirecat/&lt;a class="reference external" href="https://github.com/sapphirecat/garden-vim"&gt;garden-vim&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking!&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>Zora Update, Garden Vim Themes Coming</title><link href="https://sapphirecat.github.io/2024/043-zora-update-garden-vim-theme-coming/" rel="alternate"></link><published>2024-02-12T00:00:00-05:00</published><updated>2024-02-12T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2024-02-12:/2024/043-zora-update-garden-vim-theme-coming/</id><content type="html">&lt;p&gt;This is a small pre-announcement; nothing is available yet.&lt;/p&gt;
&lt;p&gt;I have another update planned for &lt;a class="reference external" href="https://github.com/sapphirecat/zora-theme-vim"&gt;the Zora vim theme&lt;/a&gt;, namely, support for
&lt;a class="reference external" href="https://github.com/vim-airline/vim-airline"&gt;airline&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A previous update to Zora is that version 1.1.0 (renamed and) documented a
config option, the &lt;tt class="docutils literal"&gt;g:zora_use_gui_colors&lt;/tt&gt; variable.  Internally, the theme
loads &lt;em&gt;only&lt;/em&gt; GUI colors if the GUI is running, the &lt;tt class="docutils literal"&gt;termguicolors&lt;/tt&gt; option is
known+set… or if the variable is set to 1.  Otherwise, it falls back to checking
&lt;tt class="docutils literal"&gt;t_Co&lt;/tt&gt; to load the 256- or 16-color theme, depending on the terminal’s
capabilities.&lt;/p&gt;
&lt;p&gt;I am also designing a new theme called Garden, a GUI-oriented theme in warm
earthy tones with a dark green background.  This theme will have &lt;a class="reference external" href="https://github.com/vim-airline/vim-airline"&gt;airline&lt;/a&gt;
support from the start.  A &lt;em&gt;serviceable&lt;/em&gt; 256-color variant will be provided,
but the background color will be gray instead of green.&lt;/p&gt;
&lt;p&gt;Stay tuned for the final release!&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>Quilt Draw: Supports Windows XP/Vista</title><link href="https://sapphirecat.github.io/2023/236-quilt-draw-xp-vista/" rel="alternate"></link><published>2023-08-24T00:00:00-04:00</published><updated>2023-08-24T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2023-08-24:/2023/236-quilt-draw-xp-vista/</id><content type="html">&lt;p&gt;A new Quilt Draw release has been made!  To use it, go to its &lt;a class="reference external" href="https://sapphirecat.github.io/quilt-draw/"&gt;repository
page&lt;/a&gt;.  &lt;strong&gt;Known issue:&lt;/strong&gt; Please turn off Dark Reader for the site.&lt;/p&gt;
&lt;p&gt;This is a small release to add support for Firefox 52 ESR (Windows XP and
Vista.)  There are no new features.&lt;/p&gt;
&lt;p&gt;I would like to give a special salute to &lt;a class="reference external" href="https://www.mozilla.org/"&gt;Mozilla&lt;/a&gt; for supporting operating
systems longer than &lt;em&gt;strictly&lt;/em&gt; necessary.&lt;/p&gt;
&lt;div class="section" id="why-am-i-doing-this"&gt;
&lt;h2&gt;Why am I doing this?&lt;/h2&gt;
&lt;p&gt;In 2012, I bought a PC, and work bought a Late 2012 model iMac for my desk.
That iMac ended up coming home for the pandemic.  They finally replaced it with
a System76 laptop (at my request) in 2022, because we have a large investment in
VirtualBox and x86, and sometimes they want to fly me to other offices.  I
didn’t rate it as likely that the last Intel systems from Apple would get a full
decade of support, but that’s what I’m targeting for them.&lt;/p&gt;
&lt;p&gt;As for my PC… I am writing this on it.  It’s still running.  It has had an SSD
upgrade, of course, because Windows Compatibility Telemetry was such a drag on
the hard disk, and it’s had an extra 4 GB of RAM put in (freed up by upgrading a
different system.)&lt;/p&gt;
&lt;p&gt;It started life with Windows 7, just barely, then moved on through 8, 8.1, and
10.  It might live to see the end of support for Windows 10… and then Microsoft
thinks it should become e-waste, just like the iMac.&lt;/p&gt;
&lt;p&gt;But they’re both perfectly functional machines!&lt;/p&gt;
&lt;p&gt;What if I wanted to use hardware for 15 years?  20 years?  Could I make my own
code run on systems that old?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-does-it-work"&gt;
&lt;h2&gt;How does it work?&lt;/h2&gt;
&lt;p&gt;I discovered that Pickr had an ES5 build (well-supported in IE9+, and crucially,
Firefox 52), so I switched to that instead.  That allowed for the initial
Windows XP/Vista support.&lt;/p&gt;
&lt;p&gt;Unreleased but fully tested, I have updated the toolchain for Quilt Draw itself.
It used to directly use the Typescript 3.9 compiler.  This has been replaced
with Webpack and the usual suspects.  The new build system supports Typescript
5.1, so now I can catch up on years of new features, and push more of the future
deeper into the past.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Projects"></category></entry><entry><title>Slim4 http-interop adapter 1.0.2 / 1.1.0</title><link href="https://sapphirecat.github.io/2023/015-slim-interop-1-1/" rel="alternate"></link><published>2023-01-15T00:00:00-05:00</published><updated>2023-01-15T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2023-01-15:/2023/015-slim-interop-1-1/</id><content type="html">&lt;p&gt;Following the reporting (and subsequent fixing) of issue #1,
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;sapphirecat/slim4-http-interop-adapter&lt;/span&gt;&lt;/tt&gt; has two new versions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;1.0.2 updates the &lt;tt class="docutils literal"&gt;composer.json&lt;/tt&gt; to reject Slim 4.11 and newer, while
retaining compatibility with PHP 7.1&lt;/li&gt;
&lt;li&gt;1.1.0 requires Slim 4.11+ and PHP 7.4+&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Links: &lt;a class="reference external" href="https://github.com/sapphirecat/slim4-http-interop-adapter"&gt;GitHub&lt;/a&gt; and &lt;a class="reference external" href="https://packagist.org/packages/sapphirecat/slim4-http-interop-adapter"&gt;Packagist&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is a change from the versioning policy previously listed in the
CHANGELOG.md file.&lt;/strong&gt;  It previously stated that removing support for a PHP
version would be a major release.  However, this is not how the wider PHP
ecosystem treats it, and it does not appear to be &lt;em&gt;necessary&lt;/em&gt; under Semantic
Versioning.  In particular, this package has no user-facing API, and
therefore, nothing is broken by this change.&lt;/p&gt;
&lt;p&gt;Since release, I have found that the 1.0 branch's support of PHP 7.1 is overly
broad.  By the time my package is useful (Slim 4.9.0), Slim itself required
PHP 7.3.  Nevertheless, v1.0.2 keeps &lt;strong&gt;all&lt;/strong&gt; support that v1.0.0 promised.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>Quilt Draw: Downloads in Pale Moon</title><link href="https://sapphirecat.github.io/2022/266-quilt-draw-pale-moon/" rel="alternate"></link><published>2022-09-23T00:00:00-04:00</published><updated>2022-09-23T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2022-09-23:/2022/266-quilt-draw-pale-moon/</id><content type="html">&lt;p&gt;A new Quilt Draw release has been made!  To use it, go to its &lt;a class="reference external" href="https://sapphirecat.github.io/quilt-draw/"&gt;repository
page&lt;/a&gt;.  &lt;strong&gt;Known issue:&lt;/strong&gt; Please turn off Dark Reader for the site.&lt;/p&gt;
&lt;p&gt;This is a small release to fix the download buttons in &lt;a class="reference external" href="https://www.palemoon.org/"&gt;Pale Moon&lt;/a&gt; 31, and
presumably, all previous versions.  I will be testing the non-updated version
of Pale Moon included with Fossapup64 9.5, and making any additional updates
that prove to be necessary.&lt;/p&gt;
&lt;p&gt;I have also learned that Quilt Draw &lt;em&gt;does not&lt;/em&gt; work in Windows XP, due to my
choice of color picker library.  No changes are expected in that situation, but
it would have been cool if it had worked.&lt;/p&gt;
&lt;div class="section" id="why-am-i-doing-this"&gt;
&lt;h2&gt;Why am I doing this?&lt;/h2&gt;
&lt;p&gt;Accessibility is important.&lt;/p&gt;
&lt;p&gt;I have &lt;em&gt;used&lt;/em&gt; Pale Moon, and I understand it has a ton of shortcomings for the
self-styled &amp;quot;modern&amp;quot; Web.  But that makes it doubly important: clearly, the
people who are &lt;em&gt;using&lt;/em&gt; Pale Moon, &lt;strong&gt;need it.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(To look at the situation from another angle, this is the logical extension of
when I would write for &amp;quot;the version of the programming language that shipped in
Debian Stable.&amp;quot; I do not wish to unreasonably stifle users.)&lt;/p&gt;
&lt;p&gt;Can we truly say that we &amp;quot;value&amp;quot; something, if we have never made the slightest
sacrifice for it?&lt;/p&gt;
&lt;/div&gt;
</content><category term="Projects"></category></entry><entry><title>Quilt Draw: Dark Mode, Flip Tool, Guides</title><link href="https://sapphirecat.github.io/2022/245-quilt-draw-guides/" rel="alternate"></link><published>2022-09-02T00:00:00-04:00</published><updated>2022-09-02T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2022-09-02:/2022/245-quilt-draw-guides/</id><content type="html">&lt;p&gt;A new Quilt Draw release has been made!  To use it, go to its &lt;a class="reference external" href="https://sapphirecat.github.io/quilt-draw/"&gt;repository
page&lt;/a&gt;.  &lt;strong&gt;Known issue:&lt;/strong&gt; Dark Reader completely destroys the UI elements.
Please turn off Dark Reader for the site.&lt;/p&gt;
&lt;div class="section" id="whats-new"&gt;
&lt;h2&gt;What’s new?&lt;/h2&gt;
&lt;p&gt;A native dark theme has been added.  If the browser reports that the page
should be rendered in dark mode, then an updated theme will be applied.&lt;/p&gt;
&lt;p&gt;A “Flip” tool has been added.  Left-click (primary click) will flip a square
horizontally, and right-click (secondary click) will flip it vertically.  This
complements the “Spin” tool, because some multi-color designs are asymmetric
and can’t be spun into all configurations.&lt;/p&gt;
&lt;p&gt;Finally, an option for guides to be added to the block editor is available, to
help visualize the individual square boundaries.  If the guides are active on
the page, then the download will also include them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-quilt-draw"&gt;
&lt;h2&gt;What is quilt-draw?&lt;/h2&gt;
&lt;p&gt;Quilt Draw is a quarter-square triangle designing tool.  It lets you pick a
set of colors, then modify a single quilt block using them. A preview of a
full quilt using the block is generated in real time.  There are also options
for adding borders and sashing to the preview.&lt;/p&gt;
&lt;p&gt;Finally, there are options to download both the block itself, and the quilt
preview.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="technical-support"&gt;
&lt;h2&gt;Technical Support&lt;/h2&gt;
&lt;p&gt;There is none.  This project is strictly for amusement.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Projects"></category></entry><entry><title>devproxy2 version 2.1.1 released!</title><link href="https://sapphirecat.github.io/2022/227-devproxy2-2-1-1-released/" rel="alternate"></link><published>2022-08-15T00:00:00-04:00</published><updated>2022-08-15T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2022-08-15:/2022/227-devproxy2-2-1-1-released/</id><content type="html">&lt;p&gt;The &lt;tt class="docutils literal"&gt;devproxy2&lt;/tt&gt; 2.1.1 source &lt;a class="reference external" href="https://github.com/sapphirecat/devproxy2/releases/tag/v2.1.1"&gt;release&lt;/a&gt; has been made.&lt;/p&gt;
&lt;p&gt;Due to an oversight, a 2.1.0 release was also made today, although the
tag has been available in the repository for some time.&lt;/p&gt;
&lt;div class="section" id="what-is-devproxy2"&gt;
&lt;h2&gt;What is devproxy2?&lt;/h2&gt;
&lt;p&gt;devproxy2 is an HTTP/HTTPS proxy server that redirects configured
domains to an arbitrary destination.  This allows a Web browser to use a
production URL to access a development VM/container.&lt;/p&gt;
&lt;p&gt;In combination with an extension like &lt;a class="reference external" href="https://addons.mozilla.org/en-US/firefox/addon/proxy-switcher-and-manager/"&gt;Proxy Switcher and Manager&lt;/a&gt;,
choosing production or development is fast and simple, and has a
graphical status indication.&lt;/p&gt;
&lt;p&gt;It is also possible to use NAT port forwarding (e.g. port 8080 on the
host to port 80 on the VM) to access the development code, without the
development code needing to know that the browser sees it on a
nonstandard port.  That information is held only in the proxy and
forwarding configurations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="release-details"&gt;
&lt;h2&gt;Release Details&lt;/h2&gt;
&lt;p&gt;Since the 2.1.0 release, the following changes have been made:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The security posture has been improved, per &lt;a class="reference external" href="https://www.elttam.com/blog/golang-codereview/"&gt;advice&lt;/a&gt; that was posted
on r/netsec.&lt;/li&gt;
&lt;li&gt;The default ports for servers are applied correctly; this feature was
broken in 2.1.0 with the switch to go-toml 2.x.&lt;/li&gt;
&lt;li&gt;The author is using Podman for testing instead of Docker.&lt;/li&gt;
&lt;li&gt;Dependencies have been updated.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Please file any problems in GitHub &lt;a class="reference external" href="https://github.com/sapphirecat/devproxy2/issues"&gt;issues&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="one-last-thing"&gt;
&lt;h2&gt;One Last Thing&lt;/h2&gt;
&lt;p&gt;Please consider using Firefox and maybe even donating to Mozilla.  The
web needs genuine competition to remain free and open.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Projects"></category></entry><entry><title>Quilt Draw update released!</title><link href="https://sapphirecat.github.io/2022/226-quilt-draw/" rel="alternate"></link><published>2022-08-14T00:00:00-04:00</published><updated>2022-08-14T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2022-08-14:/2022/226-quilt-draw/</id><content type="html">&lt;p&gt;A new &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;quilt-draw&lt;/span&gt;&lt;/tt&gt; release has been made!  This may also be the world’s
first announcement of its existence, outside of appearing in a GitHub
repository.&lt;/p&gt;
&lt;p&gt;To use it, go to its &lt;a class="reference external" href="https://sapphirecat.github.io/quilt-draw/"&gt;repository page&lt;/a&gt;.  &lt;strong&gt;Known issue:&lt;/strong&gt; Dark Reader
completely destroys the UI elements.  Please turn off Dark Reader for the
site.&lt;/p&gt;
&lt;div class="section" id="what-is-quilt-draw"&gt;
&lt;h2&gt;What is quilt-draw?&lt;/h2&gt;
&lt;p&gt;Quilt Draw is a quarter-square triangle designing tool.  It lets you pick a
set of colors, then modify a single quilt block using them. A preview of a
full quilt using the block is generated in real time.  There are also options
for adding borders and sashing to the preview.&lt;/p&gt;
&lt;p&gt;Finally, there are options to download both the block itself, and the quilt
preview.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-is-new"&gt;
&lt;h2&gt;What is new?&lt;/h2&gt;
&lt;p&gt;When the width of the window exceeded 1600 pixels, there were coordinate
errors.  They are now fixed.  It’s a hack, but it works.&lt;/p&gt;
&lt;p&gt;I have also updated the components (the color picker) to the latest version.
The main code still targets ES6/2015, so there should be few issues, even on
older computers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="technical-support"&gt;
&lt;h2&gt;Technical Support&lt;/h2&gt;
&lt;p&gt;There is none.  This project is strictly for amusement.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Projects"></category></entry><entry><title>dynacache version 1.1.2 released!</title><link href="https://sapphirecat.github.io/2022/110-dynacache-1-1-2-released/" rel="alternate"></link><published>2022-04-20T00:00:00-04:00</published><updated>2022-04-20T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2022-04-20:/2022/110-dynacache-1-1-2-released/</id><content type="html">&lt;p&gt;The &lt;tt class="docutils literal"&gt;dynacache&lt;/tt&gt; 1.1.2 &lt;a class="reference external" href="https://github.com/sapphirecat/dynacache/releases/tag/v1.1.2"&gt;release&lt;/a&gt; is made available to the public in binary form
for AMD64 (v2 &lt;a class="reference external" href="https://en.wikipedia.org/wiki/X86-64#Microarchitecture_levels"&gt;architecture level&lt;/a&gt;) Linux.&lt;/p&gt;
&lt;div class="section" id="what-is-dynacache"&gt;
&lt;h2&gt;What is dynacache?&lt;/h2&gt;
&lt;p&gt;dynacache is a memcached server that stores data in Amazon DynamoDb.  It
recognizes the session-locking protocol of PHP's memcached extension,
converting them into locks in DynamoDb that are compatible with the AWS
SDK for PHP.  Data is &lt;em&gt;nearly&lt;/em&gt; compatible: the data is stored as a
binary type, because the SDK for Go requires a string type to be valid
UTF-8, and PHP makes no such promise.&lt;/p&gt;
&lt;p&gt;For best results with PHP, set the following options in the relevant
&lt;tt class="docutils literal"&gt;php.ini&lt;/tt&gt; file:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
; dynacache doesn't support the binary protocol
memcached.sess_binary_protocol = Off
memcached.sess_prefix = memc.sess.key.
; use dynacache to store sessions
session.save_handler = memcached
session.save_path = localhost:11211
&lt;/pre&gt;
&lt;p&gt;For available configuration, &lt;tt class="docutils literal"&gt;dynacache&lt;/tt&gt; supports the standard AWS SDK
locations for credentials, and some optional settings shown when running
&lt;tt class="docutils literal"&gt;dynacache &lt;span class="pre"&gt;-help&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="release-details"&gt;
&lt;h2&gt;Release Details&lt;/h2&gt;
&lt;p&gt;Since the 1.0.0 release, which is the last public version, the following
changes have been made:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The build is done with Go 1.18.1 with &lt;tt class="docutils literal"&gt;GOAMD64=v2&lt;/tt&gt; set.&lt;/li&gt;
&lt;li&gt;Response to &lt;tt class="docutils literal"&gt;version&lt;/tt&gt; is closer to the release version number than
before.  It's still not &lt;em&gt;strictly&lt;/em&gt; correct, unfortunately.&lt;/li&gt;
&lt;li&gt;CLI flag &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-verbose&lt;/span&gt;&lt;/tt&gt; and env var &lt;tt class="docutils literal"&gt;DYNACACHE_VERBOSE&lt;/tt&gt; (uint8) for
controlling the logging level.&lt;/li&gt;
&lt;li&gt;Missing &lt;tt class="docutils literal"&gt;append&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;prepend&lt;/tt&gt; commands are accepted.&lt;/li&gt;
&lt;li&gt;Idle clients will be disconnected during normal operation.&lt;/li&gt;
&lt;li&gt;Graceful server shutdown happens within a bounded time limit.&lt;/li&gt;
&lt;li&gt;Repeated signals will cause an immediate shutdown.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;This project is not Open Source due to the reappointment of Richard
Stallman to the FSF Board.&lt;/em&gt;  sapphirecat stands opposed to child
pornography, sex trafficking, sexism, and redefining rape.  Leadership
creates the culture of the movement, and that culture gets associated
implicitly with any participant.  It is imperative, then, for leaders to
own their mistakes.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Projects"></category></entry><entry><title>devproxy2 version 2.0.0 released!</title><link href="https://sapphirecat.github.io/2020/326-devproxy2-version-2-0-0-released/" rel="alternate"></link><published>2020-11-21T00:00:00-05:00</published><updated>2020-11-21T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2020-11-21:/2020/326-devproxy2-version-2-0-0-released/</id><content type="html">&lt;p&gt;The core binary has been stable for months, so I finally tagged
&lt;tt class="docutils literal"&gt;v2.0.0&lt;/tt&gt; and made a GitHub Release with it.&lt;/p&gt;
&lt;p&gt;Recent changes have added a Dockerfile and related support for isolating
the version of Go used to build &lt;tt class="docutils literal"&gt;devproxy2&lt;/tt&gt; from the host’s version of
Go, so that I can continue to support “1.13+” as long as my dependencies
do.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>zora colorscheme for Vim/GVim/Neovim</title><link href="https://sapphirecat.github.io/2019/020-zora-colorscheme-vim-gvim-neovim/" rel="alternate"></link><published>2019-01-20T00:00:00-05:00</published><updated>2019-01-20T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2019-01-20:/2019/020-zora-colorscheme-vim-gvim-neovim/</id><content type="html">&lt;p&gt;I created a new colorscheme! It’s based on Zora’s Domain and the
surrounding areas in &lt;em&gt;The Legend of Zelda: Breath of the Wild.&lt;/em&gt; It’s a
light theme, making heavy use of blue, green, purple, and salmon.&lt;/p&gt;
&lt;p&gt;It’s now available from
&lt;a class="reference external" href="https://github.com/sapphirecat/zora-theme-vim/"&gt;zora-theme-vim&lt;/a&gt; on
my GitHub.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/zora/php.png"&gt;&lt;img alt="An example using PHP code" src="https://sapphirecat.github.io/images/zora/php.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/zora/multi.png"&gt;&lt;img alt="An example of multiple windows and cursor line option" src="https://sapphirecat.github.io/images/zora/multi.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This is less of an experiment and more of a complete theme than ashgren
was, so it’s correspondingly more complete, &lt;strong&gt;and&lt;/strong&gt; it supports
256-color terminals.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>Three Vim Plugins</title><link href="https://sapphirecat.github.io/2019/017-a-trio-of-vim-plugins/" rel="alternate"></link><published>2019-01-17T00:00:00-05:00</published><updated>2019-01-17T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2019-01-17:/2019/017-a-trio-of-vim-plugins/</id><content type="html">&lt;p&gt;I dusted off and ENHANCED™ three of my old vim plugins:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/sapphirecat/blursave-vim"&gt;BlurSave&lt;/a&gt; – to save
files when the vim window loses focus, probably only useful in gvim&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/sapphirecat/php-psr2-vim"&gt;PHP PSR-2 auto
settings&lt;/a&gt; – to set
PSR-2 recommended indent settings and margin highlighting for PHP
files&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/sapphirecat/indent-cmds-vim"&gt;Indent commands&lt;/a&gt;
– to offer more semantic shortcuts for controlling tabs/spaces/both
and their widths&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They’re all designed to be usable by
&lt;a class="reference external" href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;, so I think that
means they work in all Vim package managers (Pathogen, Vundle, etc.)&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>New repo: ashgren GVim colorscheme</title><link href="https://sapphirecat.github.io/2019/013-ashgren-gvim-colorscheme/" rel="alternate"></link><published>2019-01-13T00:00:00-05:00</published><updated>2019-01-13T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2019-01-13:/2019/013-ashgren-gvim-colorscheme/</id><content type="html">&lt;p&gt;I dusted off an old PuTTY theme, from when I was using Windows Vista,
and ported it to GVim (and only GVim.)&lt;/p&gt;
&lt;p&gt;The repository has been published as
&lt;a class="reference external" href="https://github.com/sapphirecat/ashgren-gvim/"&gt;ashgren-gvim&lt;/a&gt; on my
GitHub.&lt;/p&gt;
&lt;p&gt;ashgren is a low-contrast theme with a mid-tone background. A lot of
light themes use a blazing white background, which makes it difficult to
distinguish among the darker colors they use.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/php.png"&gt;&lt;img alt="An example using PHP code" src="https://sapphirecat.github.io/images/ashgren/php.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/js.png"&gt;&lt;img alt="An example using JavaScript code" src="https://sapphirecat.github.io/images/ashgren/js.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/go.png"&gt;&lt;img alt="An example using Go code" src="https://sapphirecat.github.io/images/ashgren/go.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/py.png"&gt;&lt;img alt="An example using Python code" src="https://sapphirecat.github.io/images/ashgren/py.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/md.png"&gt;&lt;img alt="An example using Markdown" src="https://sapphirecat.github.io/images/ashgren/md.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external image-reference" href="https://sapphirecat.github.io/images/ashgren/multi.png"&gt;&lt;img alt="An example of multiple windows and cursor line option" src="https://sapphirecat.github.io/images/ashgren/multi.png" /&gt;&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As a PuTTY theme, ashgren used a set of darker (regular) and lighter
(bold) foreground colors, but this port ends up mostly using the darker
side of the palette.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>cloud-maker 0.8.4: minor bugfixes</title><link href="https://sapphirecat.github.io/2016/035-cloud-maker-0-8-4-release/" rel="alternate"></link><published>2016-02-04T00:00:00-05:00</published><updated>2016-02-04T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2016-02-04:/2016/035-cloud-maker-0-8-4-release/</id><content type="html">&lt;p&gt;I discovered the module which I had intended to use as a version check
via &lt;tt class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; cloud_maker&lt;/tt&gt; didn’t actually work. There was no way to
execute it, to begin with. It also turned out that &lt;tt class="docutils literal"&gt;sys.version_info&lt;/tt&gt;
wasn’t something that could be used with tuple unpacking in Python 2.&lt;/p&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--help&lt;/span&gt;&lt;/tt&gt; option used to print the usage information, and then a
traceback for a &lt;tt class="docutils literal"&gt;SystemExit&lt;/tt&gt; exception. I narrowed this down to an
overzealous &lt;tt class="docutils literal"&gt;try/except&lt;/tt&gt; block, so now it recognizes &lt;tt class="docutils literal"&gt;SystemExit&lt;/tt&gt;
and &lt;tt class="docutils literal"&gt;KeyboardInterrupt&lt;/tt&gt; and skips the traceback for those.&lt;/p&gt;
&lt;p&gt;Finally, the documentation was enhanced slightly. I was rather
surprised, when finding out how the version check was supposed to work,
that there wasn’t the &lt;em&gt;slightest bit&lt;/em&gt; in the README about how this was
intended to be invoked. The slightest bit is now there.&lt;/p&gt;
&lt;p&gt;This release is available as &lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/releases"&gt;source on
github&lt;/a&gt;, and as
a wheel &lt;a class="reference external" href="https://pypi.python.org/pypi/cloud-maker/0.8.4"&gt;on PyPI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Any and all bugs should be reported to the &lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/issues"&gt;issue
tracker&lt;/a&gt; on
github.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: this release was actually made January 24th, but I forgot to
write about it here (and tag the git repository) until February 4th.&lt;/em&gt;&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>cloud-maker 0.8.3: new config variable, accurate requirements</title><link href="https://sapphirecat.github.io/2015/356-cloud-maker-0-8-3-release/" rel="alternate"></link><published>2015-12-22T00:00:00-05:00</published><updated>2015-12-22T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-12-22:/2015/356-cloud-maker-0-8-3-release/</id><content type="html">&lt;p&gt;The 0.8.3 release adds an &lt;tt class="docutils literal"&gt;INI_DIR&lt;/tt&gt; variable that will be substituted
into values in the configuration file, allowing for paths to be
specified relative to the config file. It turned out that this was a
feature I wanted, to keep the bundled data somewhat more local than
requiring a fixed path under &lt;tt class="docutils literal"&gt;HOME&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;While testing this change, I discovered that the Python 3 line prior to
3.3.4 had a bug in the &lt;tt class="docutils literal"&gt;tarfile&lt;/tt&gt; module. When using the module exactly
as I am (with an externally-provided file object and gzip compression),
the tar data doesn’t get written into the gzip stream on disk.&lt;/p&gt;
&lt;p&gt;That was reported as &lt;a class="reference external" href="http://bugs.python.org/issue20238"&gt;issue 20238&lt;/a&gt;
and fixed by the final releases of 3.3.4 and 3.4.0, while 2.7 has never
been affected.&lt;/p&gt;
&lt;p&gt;Due to the widespread availability of 2.7 on systems that packaged
affected versions of Python, I decided the pragmatic path would be to
recommend Python 2 on those systems and raise the Python 3 version
requirement to 3.3.4. I haven’t isolated the fix by diffing Python
releases, nor do I know what I would need to patch over in order to work
around it.&lt;/p&gt;
&lt;p&gt;This release is available as &lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/releases"&gt;source on
github&lt;/a&gt;, and as
a wheel &lt;a class="reference external" href="https://pypi.python.org/pypi/cloud-maker/0.8.3"&gt;on PyPI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Any and all bugs should be reported to the &lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/issues"&gt;issue
tracker&lt;/a&gt; on
github.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>cloud-maker 0.8.2: PyPI publication</title><link href="https://sapphirecat.github.io/2015/317-cloud-maker-0-8-2-release/" rel="alternate"></link><published>2015-11-13T00:00:00-05:00</published><updated>2015-11-13T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-11-13:/2015/317-cloud-maker-0-8-2-release/</id><content type="html">&lt;p&gt;The 0.8.2 release adds a &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; and associated machinery, meaning
that cloud-maker is now &lt;a class="reference external" href="https://pypi.python.org/pypi/cloud-maker"&gt;on
PyPI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Any and all bugs should be reported to the issue tracker on
&lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/issues"&gt;github&lt;/a&gt;.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>cloud-maker 0.8.1: Python 2.7 support</title><link href="https://sapphirecat.github.io/2015/312-cloud-maker-0-8-1-release/" rel="alternate"></link><published>2015-11-08T00:00:00-05:00</published><updated>2015-11-08T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-11-08:/2015/312-cloud-maker-0-8-1-release/</id><content type="html">&lt;p&gt;The 0.8.1 release adds official support for Python 2.7 to cloud-maker,
enabling it to run on the system python installed with OS X. Reports on
the Internet suggest that this covers at least as far back as Lion,
forward through El Capitan. (I can’t find an extensive history, but Lion
released a year after 2.7.0, which in turn came after Snow Leopard.)&lt;/p&gt;
&lt;p&gt;This change should also make it more readily available to Linux users,
as python 2 is typically installed as the default &lt;tt class="docutils literal"&gt;/usr/bin/python&lt;/tt&gt;
executable.&lt;/p&gt;
&lt;p&gt;If there are any issues with this release, please send them to
&lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker/issues"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In other news, ‘v0.8.0’ and ‘v0.8.1’ tags have been added to the
repository.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>cloud-maker 0.8.0</title><link href="https://sapphirecat.github.io/2015/295-cloud-maker-0-8-0-release/" rel="alternate"></link><published>2015-10-22T00:00:00-04:00</published><updated>2015-10-22T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-10-22:/2015/295-cloud-maker-0-8-0-release/</id><content type="html">&lt;p&gt;I didn’t actually test the OVA export I got from &lt;tt class="docutils literal"&gt;fedora2ova&lt;/tt&gt;, but
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;cloud-maker&lt;/span&gt;&lt;/tt&gt; has been pushed to my &lt;a class="reference external" href="https://github.com/sapphirecat/cloud-maker"&gt;cloud-maker
repo&lt;/a&gt;. Happy Wily
Werewolf Release Day!&lt;/p&gt;
&lt;p&gt;The repo is currently designed to run in-place with either of these
forms:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
python -m make_provisioner --help
python . provision --help
&lt;/pre&gt;
&lt;p&gt;I’d like to add a &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; so it can be published to PyPI and
abandoned, but that’s not ready yet.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>fedora-pack to be superseded by cloud-maker</title><link href="https://sapphirecat.github.io/2015/265-cloud-maker-replacing-fedora-pack/" rel="alternate"></link><published>2015-09-22T00:00:00-04:00</published><updated>2015-09-22T00:00:00-04:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-09-22:/2015/265-cloud-maker-replacing-fedora-pack/</id><content type="html">&lt;p&gt;When we &lt;a class="reference external" href="https://sapphirecat.github.io/2015/013-fedora-pack-config/"&gt;last left
off&lt;/a&gt;, I had sketched
out a config file for fedora-pack, then neglected it when I finally
accepted that &lt;a class="reference external" href="https://www.decodednode.com/2015/02/perl-is-dying.html"&gt;Perl is
dying&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Seven months later, fedora-pack is undergoing a rewrite to Python. It’s
equally widespread (or easy to install) and includes a ton of batteries.
I’ve always liked that.&lt;/p&gt;
&lt;p&gt;But that’s only half the change. I’ve been trying to simplify and
streamline the code, to make it &lt;em&gt;more straightforward&lt;/em&gt; even at the
expense of some flexibility and testability—there are, after all, no
tests, no extensions, and no users. As far as I know.&lt;/p&gt;
&lt;p&gt;That’s resulted in a rather different codebase, because of two
realizations:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;At work, I don’t use the multi-version capability. What if
&lt;tt class="docutils literal"&gt;make_provisioner&lt;/tt&gt; just installs the platform’s &lt;em&gt;default&lt;/em&gt; version?
It would have to know a lot less about distros and versions.&lt;/li&gt;
&lt;li&gt;At work, our bundled scripts install our own necessary packages (such
as git) in addition to the core languages. What if
&lt;tt class="docutils literal"&gt;make_provisioner&lt;/tt&gt; doesn’t bother offering &lt;em&gt;package
preinstallation?&lt;/em&gt; On the one side of the process is &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;cloud-init&lt;/span&gt;&lt;/tt&gt;,
if preinstallation is important. On the other, the runner script can
install its own choice of language packages. Now &lt;tt class="docutils literal"&gt;make_provisioner&lt;/tt&gt;
doesn’t even have to care about distros (or features or packages)
&lt;strong&gt;at all&lt;/strong&gt;, as long as it can have a distro-agnostic SFX stub.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Things seem to be going well so far; expect a code dump on github by
November. I want to use cloud-maker for work’s AMI builder, instead of a
hacked fedora-pack fork, and the Ubuntu 15.10 release will be a good
time to change that.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>fedora-pack Configuration File Update</title><link href="https://sapphirecat.github.io/2015/013-fedora-pack-config/" rel="alternate"></link><published>2015-01-13T00:00:00-05:00</published><updated>2015-01-13T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2015-01-13:/2015/013-fedora-pack-config/</id><content type="html">&lt;p&gt;I mentioned &lt;a class="reference external" href="https://sapphirecat.github.io/2014/355-more-fedora-pack-options/"&gt;last
post&lt;/a&gt; that I
was thinking of going with “a config file of some sort.” Plans have
formed to use INI format, and the parser is written. (Between the
desires to be pure-perl all the way down and to keep embed size down, I
didn’t find any pre-written parsers that suited me on CPAN.)&lt;/p&gt;
&lt;p&gt;So, it’s probably going to end up something like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
; we basically just use this for supervisord, no venv needed
[python2]
min_version = 2.7
with_virtualenv = 0

; legacy app can’t handle `carton exec`
[perl]
with_carton = 0

[php]
min_version=5.4

[main]
install = &amp;quot;php perl python2&amp;quot; ; known to fedora-pack
add_packages = &amp;quot;php5-fpm libmoose-perl&amp;quot; ; known to apt/yum
&lt;/pre&gt;
&lt;p&gt;As a bonus, the sections organize the options so that languages can
define their own options &lt;em&gt;fully independently,&lt;/em&gt; without having to avoid
naming conflicts in the CLI options.&lt;/p&gt;
&lt;p&gt;fedora-pack will continue to install all the per-language options by
default, since actually using them is best practice, as I understand
things.&lt;/p&gt;
</content><category term="Projects"></category></entry><entry><title>More fedora-pack Options</title><link href="https://sapphirecat.github.io/2014/355-more-fedora-pack-options/" rel="alternate"></link><published>2014-12-21T00:00:00-05:00</published><updated>2014-12-21T00:00:00-05:00</updated><author><name>sapphirecat</name></author><id>tag:sapphirecat.github.io,2014-12-21:/2014/355-more-fedora-pack-options/</id><content type="html">&lt;p&gt;I’ve noticed that &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;python-pip&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;virtualenv&lt;/tt&gt; packages on Ubuntu
Utopic have similar dependencies—but the latter is on &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;*-whl&lt;/span&gt;&lt;/tt&gt; packages
and the former is not. Since I use Python but &lt;em&gt;not&lt;/em&gt; virtualenv in my own
server build, it ‘would be nice’ to skip the automatic installation of
it by fedora-pack.&lt;/p&gt;
&lt;p&gt;Of course, in order to support such a thing, fedora-pack clearly needs
more options for finer control. Yet, it seems like the global option
parser isn’t the perfect place for language-related options, so the
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;App::FedoraPack::System&lt;/span&gt;&lt;/tt&gt; class tree may spawn some additional
argument-related functions.&lt;/p&gt;
&lt;p&gt;I may finally go with a config file of some sort. The command line &lt;em&gt;is&lt;/em&gt;
getting unwieldy already.&lt;/p&gt;
</content><category term="Projects"></category></entry></feed>